[build-system]
requires = ["setuptools>=65.5.0", "wheel", "setuptools_scm", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "natMEEG"
dynamic = ["version"]
description = "Prcess M/EEG data with a set of utility functions built with a framework focused on continuous recordings and naturalistic stimuli."
authors = [
  {name = "Hugo Weissbart", email = "hugo.weissbart@donders.ru.nl"}
]
readme = "README.md"
license = "GPL-3.0-or-later"
license-files = ["LICENSE"]
requires-python = ">=3.10"
keywords = ["EEG", "neuroscience", "signal processing"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research"
]
dependencies = [
    "numpy>=1.11.0",
    "scipy>=1.0.0",
    "scikit-learn>=0.20.0",
    "pandas>=0.23.0",
    "matplotlib>=2.0",
    "h5py>=2.8.0",
    "psutil",
    "tqdm"
]

[project.urls]
Homepage = "https://github.com/Hugo-W/pyEEG"
Documentation = "https://hugo-w.github.io/pyEEG-docs/"
Repository = "https://github.com/Hugo-W/pyEEG"
Issues = "https://github.com/Hugo-W/pyEEG/issues"

# C Extensions
[tool.setuptools]
ext-modules = [
  {name = "pyeeg.bin.gammatone_c", sources = ["pyeeg/gammatone_c/gammatone_c.c"]},
  {name = "pyeeg.bin.makeRateMap_c", sources = ["pyeeg/gammatone_c/makeRateMap_c.c"]}
]

[tool.setuptools.packages.find]
where = ["."]
include = ["pyeeg", "pyeeg/bin"]  # alternatively: `exclude = ["additional*"]`
namespaces = false

# This allows you to use `pip install .[docs]` to install optional dependencies.
[project.optional-dependencies]
mne = ["mne"]
docs = ["sphinx", "sphinx-rtd-theme", "nbsphinx"]
full = ["mne", "sphinx", "sphinx-rtd-theme", "nbsphinx"]

[tool.setuptools.package-data]
pyeeg = ["examples/*.ipynb", "pyeeg/bin/*dll", "pyeeg/bin/*so", "pyeeg/bin/*dylib"]

# [tool.setuptools.cmdclass]
# build_ext = "build_ext.CustomBuildExt"

[tool.setuptools_scm]
write_to = "pyeeg/version.py"
local_scheme = "no-local-version"